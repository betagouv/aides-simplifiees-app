services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3333:3333"
    environment:
      - NODE_ENV=development
      - PORT=3333
      - HOST=0.0.0.0
      - LOG_LEVEL=info
      - APP_KEY=yYCr74ySJZRnN1U5VVN6Q4Q77pfFa4x  # Change this in production!
      - SESSION_DRIVER=memory
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=aides_simplifiees
      - APP_NAME=Aides simplifi√©es
      - PUBLIC_APP_URL=http://localhost:3333
      - ADMIN_PASSWORD=change-me
      - ADMIN_LOGIN=change-me@example.com
      - MATOMO_URL=https://stats.beta.gouv.fr/
      - MATOMO_TOKEN=your-matomo-token
      - MATOMO_SITE_ID=1
      - OPENFISCA_URL=https://openfisca.aides.beta.numerique.gouv.fr/calculate
      - LEXIMPACT_URL=https://leximpact.aides.beta.numerique.gouv.fr
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs  # Mount logs directory for persistence

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=aides_simplifiees
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d  # For initialization scripts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for session storage (optional, for production scaling)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
